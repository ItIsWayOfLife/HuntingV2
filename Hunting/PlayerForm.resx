<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>